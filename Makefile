# Makefile.in generated by automake 1.15.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/pacman
pkgincludedir = $(includedir)/pacman
pkglibdir = $(libdir)/pacman
pkglibexecdir = $(libexecdir)/pacman
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = pacman$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_pacman_OBJECTS = pacman-cmdline_options.$(OBJEXT) \
	pacman-constants.$(OBJEXT) pacman-figur.$(OBJEXT) \
	pacman-game.$(OBJEXT) pacman-gamecontroller.$(OBJEXT) \
	pacman-ghost_figur.$(OBJEXT) pacman-pacman.$(OBJEXT) \
	pacman-pacman_figur.$(OBJEXT) pacman-pille.$(OBJEXT) \
	pacman-labyrinth.$(OBJEXT) pacman-screen.$(OBJEXT) \
	pacman-rail.$(OBJEXT) pacman-sounds.$(OBJEXT) \
	pacman-platform.$(OBJEXT) pacman-menu_main.$(OBJEXT) \
	pacman-menu_options.$(OBJEXT) pacman-menu_about.$(OBJEXT) \
	pacman-menu.$(OBJEXT) pacman-menu_item.$(OBJEXT) \
	pacman-funny_animation.$(OBJEXT) pacman-level.$(OBJEXT) \
	pacman-highscore.$(OBJEXT)
pacman_OBJECTS = $(am_pacman_OBJECTS)
pacman_DEPENDENCIES =
pacman_LINK = $(CXXLD) $(pacman_CXXFLAGS) $(CXXFLAGS) \
	$(pacman_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(pacman_SOURCES)
DIST_SOURCES = $(pacman_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /src/Lokiman/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /src/Lokiman/missing autoconf
AUTOHEADER = ${SHELL} /src/Lokiman/missing autoheader
AUTOMAKE = ${SHELL} /src/Lokiman/missing automake-1.15
AWK = mawk
CC = em++
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = em++ -E
CPPFLAGS = 
CXX = em++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lSDL2_mixer -lSDL2_ttf -lSDL2_image -s USE_SDL=2 -s USE_SDL_IMAGE=2 -s USE_SDL_TTF=2 -s USE_SDL_MIXER=2
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /src/Lokiman/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = pacman
PACKAGE_BUGREPORT = 
PACKAGE_NAME = pacman
PACKAGE_STRING = pacman 0.9.4
PACKAGE_TARNAME = pacman
PACKAGE_URL = 
PACKAGE_VERSION = 0.9.4
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = /emsdk/upstream/emscripten/system/local/lib/pkgconfig:/emsdk/upstream/emscripten/system/lib/pkgconfig
PKG_CONFIG_PATH = 
RANLIB = /emsdk/upstream/emscripten/emranlib
SDL2_CONFIG = /emsdk/upstream/emscripten/system/bin/sdl2-config
SDL2_FRAMEWORK = 
SDL_CFLAGS = -s USE_SDL=2
SDL_LIBS = -s USE_SDL=2
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0.9.4
abs_builddir = /src/Lokiman/src
abs_srcdir = /src/Lokiman/src
abs_top_builddir = /src/Lokiman
abs_top_srcdir = /src/Lokiman
ac_ct_CC = em++
ac_ct_CXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /src/Lokiman/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = -I/usr/include/SDL2\
	-DPACKAGE_LOCALE_DIR=\""$(localedir)"\" \
	-DPACKAGE_SRC_DIR=\""$(srcdir)"\" \
	-DPACKAGE_DATA_DIR=\""$(pkgdatadir)"\"

AM_CFLAGS = \
	 -Wall\
	 -g

pacman_SOURCES = \
	cmdline_options.cpp \
	cmdline_options.h \
	constants.cpp \
	constants.h \
	figur.cpp \
	figur.h \
	game.cpp \
	game.h \
	gamecontroller.cpp \
	gamecontroller.h \
	ghost_figur.cpp \
	ghost_figur.h \
	pacman.cpp \
	pacman.h \
	pacman_figur.cpp \
	pacman_figur.h \
	pille.cpp \
	pille.h \
	labyrinth.h \
	labyrinth.cpp \
	screen.h \
	screen.cpp \
	rail.h \
	rail.cpp \
	sounds.h \
	sounds.cpp \
	platform.h \
	platform.cpp \
	menu_main.h \
	menu_main.cpp \
	menu_options.h \
	menu_options.cpp \
	menu_about.h \
	menu_about.cpp \
	menu.h \
	menu.cpp \
	menu_item.cpp \
	menu_item.h \
	funny_animation.h \
	funny_animation.cpp \
	level.h \
	level.cpp \
	highscore.h \
	highscore.cpp

pacman_CXXFLAGS = -ansi \
	-fno-default-inline \
	-ffor-scope \
	-Wall \
	-W \
	-Wpointer-arith \
	-Wcast-qual \
	-Wcast-align \
	-Wconversion \
	-Woverloaded-virtual \
	-Wsign-compare \
	-Wnon-virtual-dtor \
	-Woverloaded-virtual \
	-Wfloat-equal \
	-Wunreachable-code \
	-Wno-reorder \
	-D_GNU_SOURCE

pacman_LDFLAGS = -I/usr/include/SDL2 -D_REENTRANT #$(SDL2_CFLAGS)
pacman_LDADD = \
	$(SDL2_LIBS) \
	-lSDL2_mixer \
	-L/usr/lib64 -lSDL2

pacmanEXTRA_DIST = libsdl \
	sdl-image \
	sdl-ttf \
	sdl-mixer

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

pacman$(EXEEXT): $(pacman_OBJECTS) $(pacman_DEPENDENCIES) $(EXTRA_pacman_DEPENDENCIES) 
	@rm -f pacman$(EXEEXT)
	$(AM_V_CXXLD)$(pacman_LINK) $(pacman_OBJECTS) $(pacman_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/pacman-cmdline_options.Po
include ./$(DEPDIR)/pacman-constants.Po
include ./$(DEPDIR)/pacman-figur.Po
include ./$(DEPDIR)/pacman-funny_animation.Po
include ./$(DEPDIR)/pacman-game.Po
include ./$(DEPDIR)/pacman-gamecontroller.Po
include ./$(DEPDIR)/pacman-ghost_figur.Po
include ./$(DEPDIR)/pacman-highscore.Po
include ./$(DEPDIR)/pacman-labyrinth.Po
include ./$(DEPDIR)/pacman-level.Po
include ./$(DEPDIR)/pacman-menu.Po
include ./$(DEPDIR)/pacman-menu_about.Po
include ./$(DEPDIR)/pacman-menu_item.Po
include ./$(DEPDIR)/pacman-menu_main.Po
include ./$(DEPDIR)/pacman-menu_options.Po
include ./$(DEPDIR)/pacman-pacman.Po
include ./$(DEPDIR)/pacman-pacman_figur.Po
include ./$(DEPDIR)/pacman-pille.Po
include ./$(DEPDIR)/pacman-platform.Po
include ./$(DEPDIR)/pacman-rail.Po
include ./$(DEPDIR)/pacman-screen.Po
include ./$(DEPDIR)/pacman-sounds.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

pacman-cmdline_options.o: cmdline_options.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-cmdline_options.o -MD -MP -MF $(DEPDIR)/pacman-cmdline_options.Tpo -c -o pacman-cmdline_options.o `test -f 'cmdline_options.cpp' || echo '$(srcdir)/'`cmdline_options.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-cmdline_options.Tpo $(DEPDIR)/pacman-cmdline_options.Po
#	$(AM_V_CXX)source='cmdline_options.cpp' object='pacman-cmdline_options.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-cmdline_options.o `test -f 'cmdline_options.cpp' || echo '$(srcdir)/'`cmdline_options.cpp

pacman-cmdline_options.obj: cmdline_options.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-cmdline_options.obj -MD -MP -MF $(DEPDIR)/pacman-cmdline_options.Tpo -c -o pacman-cmdline_options.obj `if test -f 'cmdline_options.cpp'; then $(CYGPATH_W) 'cmdline_options.cpp'; else $(CYGPATH_W) '$(srcdir)/cmdline_options.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-cmdline_options.Tpo $(DEPDIR)/pacman-cmdline_options.Po
#	$(AM_V_CXX)source='cmdline_options.cpp' object='pacman-cmdline_options.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-cmdline_options.obj `if test -f 'cmdline_options.cpp'; then $(CYGPATH_W) 'cmdline_options.cpp'; else $(CYGPATH_W) '$(srcdir)/cmdline_options.cpp'; fi`

pacman-constants.o: constants.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-constants.o -MD -MP -MF $(DEPDIR)/pacman-constants.Tpo -c -o pacman-constants.o `test -f 'constants.cpp' || echo '$(srcdir)/'`constants.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-constants.Tpo $(DEPDIR)/pacman-constants.Po
#	$(AM_V_CXX)source='constants.cpp' object='pacman-constants.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-constants.o `test -f 'constants.cpp' || echo '$(srcdir)/'`constants.cpp

pacman-constants.obj: constants.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-constants.obj -MD -MP -MF $(DEPDIR)/pacman-constants.Tpo -c -o pacman-constants.obj `if test -f 'constants.cpp'; then $(CYGPATH_W) 'constants.cpp'; else $(CYGPATH_W) '$(srcdir)/constants.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-constants.Tpo $(DEPDIR)/pacman-constants.Po
#	$(AM_V_CXX)source='constants.cpp' object='pacman-constants.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-constants.obj `if test -f 'constants.cpp'; then $(CYGPATH_W) 'constants.cpp'; else $(CYGPATH_W) '$(srcdir)/constants.cpp'; fi`

pacman-figur.o: figur.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-figur.o -MD -MP -MF $(DEPDIR)/pacman-figur.Tpo -c -o pacman-figur.o `test -f 'figur.cpp' || echo '$(srcdir)/'`figur.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-figur.Tpo $(DEPDIR)/pacman-figur.Po
#	$(AM_V_CXX)source='figur.cpp' object='pacman-figur.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-figur.o `test -f 'figur.cpp' || echo '$(srcdir)/'`figur.cpp

pacman-figur.obj: figur.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-figur.obj -MD -MP -MF $(DEPDIR)/pacman-figur.Tpo -c -o pacman-figur.obj `if test -f 'figur.cpp'; then $(CYGPATH_W) 'figur.cpp'; else $(CYGPATH_W) '$(srcdir)/figur.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-figur.Tpo $(DEPDIR)/pacman-figur.Po
#	$(AM_V_CXX)source='figur.cpp' object='pacman-figur.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-figur.obj `if test -f 'figur.cpp'; then $(CYGPATH_W) 'figur.cpp'; else $(CYGPATH_W) '$(srcdir)/figur.cpp'; fi`

pacman-game.o: game.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-game.o -MD -MP -MF $(DEPDIR)/pacman-game.Tpo -c -o pacman-game.o `test -f 'game.cpp' || echo '$(srcdir)/'`game.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-game.Tpo $(DEPDIR)/pacman-game.Po
#	$(AM_V_CXX)source='game.cpp' object='pacman-game.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-game.o `test -f 'game.cpp' || echo '$(srcdir)/'`game.cpp

pacman-game.obj: game.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-game.obj -MD -MP -MF $(DEPDIR)/pacman-game.Tpo -c -o pacman-game.obj `if test -f 'game.cpp'; then $(CYGPATH_W) 'game.cpp'; else $(CYGPATH_W) '$(srcdir)/game.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-game.Tpo $(DEPDIR)/pacman-game.Po
#	$(AM_V_CXX)source='game.cpp' object='pacman-game.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-game.obj `if test -f 'game.cpp'; then $(CYGPATH_W) 'game.cpp'; else $(CYGPATH_W) '$(srcdir)/game.cpp'; fi`

pacman-gamecontroller.o: gamecontroller.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-gamecontroller.o -MD -MP -MF $(DEPDIR)/pacman-gamecontroller.Tpo -c -o pacman-gamecontroller.o `test -f 'gamecontroller.cpp' || echo '$(srcdir)/'`gamecontroller.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-gamecontroller.Tpo $(DEPDIR)/pacman-gamecontroller.Po
#	$(AM_V_CXX)source='gamecontroller.cpp' object='pacman-gamecontroller.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-gamecontroller.o `test -f 'gamecontroller.cpp' || echo '$(srcdir)/'`gamecontroller.cpp

pacman-gamecontroller.obj: gamecontroller.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-gamecontroller.obj -MD -MP -MF $(DEPDIR)/pacman-gamecontroller.Tpo -c -o pacman-gamecontroller.obj `if test -f 'gamecontroller.cpp'; then $(CYGPATH_W) 'gamecontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/gamecontroller.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-gamecontroller.Tpo $(DEPDIR)/pacman-gamecontroller.Po
#	$(AM_V_CXX)source='gamecontroller.cpp' object='pacman-gamecontroller.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-gamecontroller.obj `if test -f 'gamecontroller.cpp'; then $(CYGPATH_W) 'gamecontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/gamecontroller.cpp'; fi`

pacman-ghost_figur.o: ghost_figur.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-ghost_figur.o -MD -MP -MF $(DEPDIR)/pacman-ghost_figur.Tpo -c -o pacman-ghost_figur.o `test -f 'ghost_figur.cpp' || echo '$(srcdir)/'`ghost_figur.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-ghost_figur.Tpo $(DEPDIR)/pacman-ghost_figur.Po
#	$(AM_V_CXX)source='ghost_figur.cpp' object='pacman-ghost_figur.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-ghost_figur.o `test -f 'ghost_figur.cpp' || echo '$(srcdir)/'`ghost_figur.cpp

pacman-ghost_figur.obj: ghost_figur.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-ghost_figur.obj -MD -MP -MF $(DEPDIR)/pacman-ghost_figur.Tpo -c -o pacman-ghost_figur.obj `if test -f 'ghost_figur.cpp'; then $(CYGPATH_W) 'ghost_figur.cpp'; else $(CYGPATH_W) '$(srcdir)/ghost_figur.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-ghost_figur.Tpo $(DEPDIR)/pacman-ghost_figur.Po
#	$(AM_V_CXX)source='ghost_figur.cpp' object='pacman-ghost_figur.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-ghost_figur.obj `if test -f 'ghost_figur.cpp'; then $(CYGPATH_W) 'ghost_figur.cpp'; else $(CYGPATH_W) '$(srcdir)/ghost_figur.cpp'; fi`

pacman-pacman.o: pacman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-pacman.o -MD -MP -MF $(DEPDIR)/pacman-pacman.Tpo -c -o pacman-pacman.o `test -f 'pacman.cpp' || echo '$(srcdir)/'`pacman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-pacman.Tpo $(DEPDIR)/pacman-pacman.Po
#	$(AM_V_CXX)source='pacman.cpp' object='pacman-pacman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-pacman.o `test -f 'pacman.cpp' || echo '$(srcdir)/'`pacman.cpp

pacman-pacman.obj: pacman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-pacman.obj -MD -MP -MF $(DEPDIR)/pacman-pacman.Tpo -c -o pacman-pacman.obj `if test -f 'pacman.cpp'; then $(CYGPATH_W) 'pacman.cpp'; else $(CYGPATH_W) '$(srcdir)/pacman.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-pacman.Tpo $(DEPDIR)/pacman-pacman.Po
#	$(AM_V_CXX)source='pacman.cpp' object='pacman-pacman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-pacman.obj `if test -f 'pacman.cpp'; then $(CYGPATH_W) 'pacman.cpp'; else $(CYGPATH_W) '$(srcdir)/pacman.cpp'; fi`

pacman-pacman_figur.o: pacman_figur.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-pacman_figur.o -MD -MP -MF $(DEPDIR)/pacman-pacman_figur.Tpo -c -o pacman-pacman_figur.o `test -f 'pacman_figur.cpp' || echo '$(srcdir)/'`pacman_figur.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-pacman_figur.Tpo $(DEPDIR)/pacman-pacman_figur.Po
#	$(AM_V_CXX)source='pacman_figur.cpp' object='pacman-pacman_figur.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-pacman_figur.o `test -f 'pacman_figur.cpp' || echo '$(srcdir)/'`pacman_figur.cpp

pacman-pacman_figur.obj: pacman_figur.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-pacman_figur.obj -MD -MP -MF $(DEPDIR)/pacman-pacman_figur.Tpo -c -o pacman-pacman_figur.obj `if test -f 'pacman_figur.cpp'; then $(CYGPATH_W) 'pacman_figur.cpp'; else $(CYGPATH_W) '$(srcdir)/pacman_figur.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-pacman_figur.Tpo $(DEPDIR)/pacman-pacman_figur.Po
#	$(AM_V_CXX)source='pacman_figur.cpp' object='pacman-pacman_figur.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-pacman_figur.obj `if test -f 'pacman_figur.cpp'; then $(CYGPATH_W) 'pacman_figur.cpp'; else $(CYGPATH_W) '$(srcdir)/pacman_figur.cpp'; fi`

pacman-pille.o: pille.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-pille.o -MD -MP -MF $(DEPDIR)/pacman-pille.Tpo -c -o pacman-pille.o `test -f 'pille.cpp' || echo '$(srcdir)/'`pille.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-pille.Tpo $(DEPDIR)/pacman-pille.Po
#	$(AM_V_CXX)source='pille.cpp' object='pacman-pille.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-pille.o `test -f 'pille.cpp' || echo '$(srcdir)/'`pille.cpp

pacman-pille.obj: pille.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-pille.obj -MD -MP -MF $(DEPDIR)/pacman-pille.Tpo -c -o pacman-pille.obj `if test -f 'pille.cpp'; then $(CYGPATH_W) 'pille.cpp'; else $(CYGPATH_W) '$(srcdir)/pille.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-pille.Tpo $(DEPDIR)/pacman-pille.Po
#	$(AM_V_CXX)source='pille.cpp' object='pacman-pille.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-pille.obj `if test -f 'pille.cpp'; then $(CYGPATH_W) 'pille.cpp'; else $(CYGPATH_W) '$(srcdir)/pille.cpp'; fi`

pacman-labyrinth.o: labyrinth.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-labyrinth.o -MD -MP -MF $(DEPDIR)/pacman-labyrinth.Tpo -c -o pacman-labyrinth.o `test -f 'labyrinth.cpp' || echo '$(srcdir)/'`labyrinth.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-labyrinth.Tpo $(DEPDIR)/pacman-labyrinth.Po
#	$(AM_V_CXX)source='labyrinth.cpp' object='pacman-labyrinth.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-labyrinth.o `test -f 'labyrinth.cpp' || echo '$(srcdir)/'`labyrinth.cpp

pacman-labyrinth.obj: labyrinth.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-labyrinth.obj -MD -MP -MF $(DEPDIR)/pacman-labyrinth.Tpo -c -o pacman-labyrinth.obj `if test -f 'labyrinth.cpp'; then $(CYGPATH_W) 'labyrinth.cpp'; else $(CYGPATH_W) '$(srcdir)/labyrinth.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-labyrinth.Tpo $(DEPDIR)/pacman-labyrinth.Po
#	$(AM_V_CXX)source='labyrinth.cpp' object='pacman-labyrinth.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-labyrinth.obj `if test -f 'labyrinth.cpp'; then $(CYGPATH_W) 'labyrinth.cpp'; else $(CYGPATH_W) '$(srcdir)/labyrinth.cpp'; fi`

pacman-screen.o: screen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-screen.o -MD -MP -MF $(DEPDIR)/pacman-screen.Tpo -c -o pacman-screen.o `test -f 'screen.cpp' || echo '$(srcdir)/'`screen.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-screen.Tpo $(DEPDIR)/pacman-screen.Po
#	$(AM_V_CXX)source='screen.cpp' object='pacman-screen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-screen.o `test -f 'screen.cpp' || echo '$(srcdir)/'`screen.cpp

pacman-screen.obj: screen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-screen.obj -MD -MP -MF $(DEPDIR)/pacman-screen.Tpo -c -o pacman-screen.obj `if test -f 'screen.cpp'; then $(CYGPATH_W) 'screen.cpp'; else $(CYGPATH_W) '$(srcdir)/screen.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-screen.Tpo $(DEPDIR)/pacman-screen.Po
#	$(AM_V_CXX)source='screen.cpp' object='pacman-screen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-screen.obj `if test -f 'screen.cpp'; then $(CYGPATH_W) 'screen.cpp'; else $(CYGPATH_W) '$(srcdir)/screen.cpp'; fi`

pacman-rail.o: rail.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-rail.o -MD -MP -MF $(DEPDIR)/pacman-rail.Tpo -c -o pacman-rail.o `test -f 'rail.cpp' || echo '$(srcdir)/'`rail.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-rail.Tpo $(DEPDIR)/pacman-rail.Po
#	$(AM_V_CXX)source='rail.cpp' object='pacman-rail.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-rail.o `test -f 'rail.cpp' || echo '$(srcdir)/'`rail.cpp

pacman-rail.obj: rail.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-rail.obj -MD -MP -MF $(DEPDIR)/pacman-rail.Tpo -c -o pacman-rail.obj `if test -f 'rail.cpp'; then $(CYGPATH_W) 'rail.cpp'; else $(CYGPATH_W) '$(srcdir)/rail.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-rail.Tpo $(DEPDIR)/pacman-rail.Po
#	$(AM_V_CXX)source='rail.cpp' object='pacman-rail.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-rail.obj `if test -f 'rail.cpp'; then $(CYGPATH_W) 'rail.cpp'; else $(CYGPATH_W) '$(srcdir)/rail.cpp'; fi`

pacman-sounds.o: sounds.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-sounds.o -MD -MP -MF $(DEPDIR)/pacman-sounds.Tpo -c -o pacman-sounds.o `test -f 'sounds.cpp' || echo '$(srcdir)/'`sounds.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-sounds.Tpo $(DEPDIR)/pacman-sounds.Po
#	$(AM_V_CXX)source='sounds.cpp' object='pacman-sounds.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-sounds.o `test -f 'sounds.cpp' || echo '$(srcdir)/'`sounds.cpp

pacman-sounds.obj: sounds.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-sounds.obj -MD -MP -MF $(DEPDIR)/pacman-sounds.Tpo -c -o pacman-sounds.obj `if test -f 'sounds.cpp'; then $(CYGPATH_W) 'sounds.cpp'; else $(CYGPATH_W) '$(srcdir)/sounds.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-sounds.Tpo $(DEPDIR)/pacman-sounds.Po
#	$(AM_V_CXX)source='sounds.cpp' object='pacman-sounds.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-sounds.obj `if test -f 'sounds.cpp'; then $(CYGPATH_W) 'sounds.cpp'; else $(CYGPATH_W) '$(srcdir)/sounds.cpp'; fi`

pacman-platform.o: platform.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-platform.o -MD -MP -MF $(DEPDIR)/pacman-platform.Tpo -c -o pacman-platform.o `test -f 'platform.cpp' || echo '$(srcdir)/'`platform.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-platform.Tpo $(DEPDIR)/pacman-platform.Po
#	$(AM_V_CXX)source='platform.cpp' object='pacman-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-platform.o `test -f 'platform.cpp' || echo '$(srcdir)/'`platform.cpp

pacman-platform.obj: platform.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-platform.obj -MD -MP -MF $(DEPDIR)/pacman-platform.Tpo -c -o pacman-platform.obj `if test -f 'platform.cpp'; then $(CYGPATH_W) 'platform.cpp'; else $(CYGPATH_W) '$(srcdir)/platform.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-platform.Tpo $(DEPDIR)/pacman-platform.Po
#	$(AM_V_CXX)source='platform.cpp' object='pacman-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-platform.obj `if test -f 'platform.cpp'; then $(CYGPATH_W) 'platform.cpp'; else $(CYGPATH_W) '$(srcdir)/platform.cpp'; fi`

pacman-menu_main.o: menu_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-menu_main.o -MD -MP -MF $(DEPDIR)/pacman-menu_main.Tpo -c -o pacman-menu_main.o `test -f 'menu_main.cpp' || echo '$(srcdir)/'`menu_main.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-menu_main.Tpo $(DEPDIR)/pacman-menu_main.Po
#	$(AM_V_CXX)source='menu_main.cpp' object='pacman-menu_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-menu_main.o `test -f 'menu_main.cpp' || echo '$(srcdir)/'`menu_main.cpp

pacman-menu_main.obj: menu_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-menu_main.obj -MD -MP -MF $(DEPDIR)/pacman-menu_main.Tpo -c -o pacman-menu_main.obj `if test -f 'menu_main.cpp'; then $(CYGPATH_W) 'menu_main.cpp'; else $(CYGPATH_W) '$(srcdir)/menu_main.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-menu_main.Tpo $(DEPDIR)/pacman-menu_main.Po
#	$(AM_V_CXX)source='menu_main.cpp' object='pacman-menu_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-menu_main.obj `if test -f 'menu_main.cpp'; then $(CYGPATH_W) 'menu_main.cpp'; else $(CYGPATH_W) '$(srcdir)/menu_main.cpp'; fi`

pacman-menu_options.o: menu_options.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-menu_options.o -MD -MP -MF $(DEPDIR)/pacman-menu_options.Tpo -c -o pacman-menu_options.o `test -f 'menu_options.cpp' || echo '$(srcdir)/'`menu_options.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-menu_options.Tpo $(DEPDIR)/pacman-menu_options.Po
#	$(AM_V_CXX)source='menu_options.cpp' object='pacman-menu_options.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-menu_options.o `test -f 'menu_options.cpp' || echo '$(srcdir)/'`menu_options.cpp

pacman-menu_options.obj: menu_options.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-menu_options.obj -MD -MP -MF $(DEPDIR)/pacman-menu_options.Tpo -c -o pacman-menu_options.obj `if test -f 'menu_options.cpp'; then $(CYGPATH_W) 'menu_options.cpp'; else $(CYGPATH_W) '$(srcdir)/menu_options.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-menu_options.Tpo $(DEPDIR)/pacman-menu_options.Po
#	$(AM_V_CXX)source='menu_options.cpp' object='pacman-menu_options.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-menu_options.obj `if test -f 'menu_options.cpp'; then $(CYGPATH_W) 'menu_options.cpp'; else $(CYGPATH_W) '$(srcdir)/menu_options.cpp'; fi`

pacman-menu_about.o: menu_about.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-menu_about.o -MD -MP -MF $(DEPDIR)/pacman-menu_about.Tpo -c -o pacman-menu_about.o `test -f 'menu_about.cpp' || echo '$(srcdir)/'`menu_about.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-menu_about.Tpo $(DEPDIR)/pacman-menu_about.Po
#	$(AM_V_CXX)source='menu_about.cpp' object='pacman-menu_about.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-menu_about.o `test -f 'menu_about.cpp' || echo '$(srcdir)/'`menu_about.cpp

pacman-menu_about.obj: menu_about.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-menu_about.obj -MD -MP -MF $(DEPDIR)/pacman-menu_about.Tpo -c -o pacman-menu_about.obj `if test -f 'menu_about.cpp'; then $(CYGPATH_W) 'menu_about.cpp'; else $(CYGPATH_W) '$(srcdir)/menu_about.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-menu_about.Tpo $(DEPDIR)/pacman-menu_about.Po
#	$(AM_V_CXX)source='menu_about.cpp' object='pacman-menu_about.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-menu_about.obj `if test -f 'menu_about.cpp'; then $(CYGPATH_W) 'menu_about.cpp'; else $(CYGPATH_W) '$(srcdir)/menu_about.cpp'; fi`

pacman-menu.o: menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-menu.o -MD -MP -MF $(DEPDIR)/pacman-menu.Tpo -c -o pacman-menu.o `test -f 'menu.cpp' || echo '$(srcdir)/'`menu.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-menu.Tpo $(DEPDIR)/pacman-menu.Po
#	$(AM_V_CXX)source='menu.cpp' object='pacman-menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-menu.o `test -f 'menu.cpp' || echo '$(srcdir)/'`menu.cpp

pacman-menu.obj: menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-menu.obj -MD -MP -MF $(DEPDIR)/pacman-menu.Tpo -c -o pacman-menu.obj `if test -f 'menu.cpp'; then $(CYGPATH_W) 'menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-menu.Tpo $(DEPDIR)/pacman-menu.Po
#	$(AM_V_CXX)source='menu.cpp' object='pacman-menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-menu.obj `if test -f 'menu.cpp'; then $(CYGPATH_W) 'menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu.cpp'; fi`

pacman-menu_item.o: menu_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-menu_item.o -MD -MP -MF $(DEPDIR)/pacman-menu_item.Tpo -c -o pacman-menu_item.o `test -f 'menu_item.cpp' || echo '$(srcdir)/'`menu_item.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-menu_item.Tpo $(DEPDIR)/pacman-menu_item.Po
#	$(AM_V_CXX)source='menu_item.cpp' object='pacman-menu_item.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-menu_item.o `test -f 'menu_item.cpp' || echo '$(srcdir)/'`menu_item.cpp

pacman-menu_item.obj: menu_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-menu_item.obj -MD -MP -MF $(DEPDIR)/pacman-menu_item.Tpo -c -o pacman-menu_item.obj `if test -f 'menu_item.cpp'; then $(CYGPATH_W) 'menu_item.cpp'; else $(CYGPATH_W) '$(srcdir)/menu_item.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-menu_item.Tpo $(DEPDIR)/pacman-menu_item.Po
#	$(AM_V_CXX)source='menu_item.cpp' object='pacman-menu_item.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-menu_item.obj `if test -f 'menu_item.cpp'; then $(CYGPATH_W) 'menu_item.cpp'; else $(CYGPATH_W) '$(srcdir)/menu_item.cpp'; fi`

pacman-funny_animation.o: funny_animation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-funny_animation.o -MD -MP -MF $(DEPDIR)/pacman-funny_animation.Tpo -c -o pacman-funny_animation.o `test -f 'funny_animation.cpp' || echo '$(srcdir)/'`funny_animation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-funny_animation.Tpo $(DEPDIR)/pacman-funny_animation.Po
#	$(AM_V_CXX)source='funny_animation.cpp' object='pacman-funny_animation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-funny_animation.o `test -f 'funny_animation.cpp' || echo '$(srcdir)/'`funny_animation.cpp

pacman-funny_animation.obj: funny_animation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-funny_animation.obj -MD -MP -MF $(DEPDIR)/pacman-funny_animation.Tpo -c -o pacman-funny_animation.obj `if test -f 'funny_animation.cpp'; then $(CYGPATH_W) 'funny_animation.cpp'; else $(CYGPATH_W) '$(srcdir)/funny_animation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-funny_animation.Tpo $(DEPDIR)/pacman-funny_animation.Po
#	$(AM_V_CXX)source='funny_animation.cpp' object='pacman-funny_animation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-funny_animation.obj `if test -f 'funny_animation.cpp'; then $(CYGPATH_W) 'funny_animation.cpp'; else $(CYGPATH_W) '$(srcdir)/funny_animation.cpp'; fi`

pacman-level.o: level.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-level.o -MD -MP -MF $(DEPDIR)/pacman-level.Tpo -c -o pacman-level.o `test -f 'level.cpp' || echo '$(srcdir)/'`level.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-level.Tpo $(DEPDIR)/pacman-level.Po
#	$(AM_V_CXX)source='level.cpp' object='pacman-level.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-level.o `test -f 'level.cpp' || echo '$(srcdir)/'`level.cpp

pacman-level.obj: level.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-level.obj -MD -MP -MF $(DEPDIR)/pacman-level.Tpo -c -o pacman-level.obj `if test -f 'level.cpp'; then $(CYGPATH_W) 'level.cpp'; else $(CYGPATH_W) '$(srcdir)/level.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-level.Tpo $(DEPDIR)/pacman-level.Po
#	$(AM_V_CXX)source='level.cpp' object='pacman-level.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-level.obj `if test -f 'level.cpp'; then $(CYGPATH_W) 'level.cpp'; else $(CYGPATH_W) '$(srcdir)/level.cpp'; fi`

pacman-highscore.o: highscore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-highscore.o -MD -MP -MF $(DEPDIR)/pacman-highscore.Tpo -c -o pacman-highscore.o `test -f 'highscore.cpp' || echo '$(srcdir)/'`highscore.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-highscore.Tpo $(DEPDIR)/pacman-highscore.Po
#	$(AM_V_CXX)source='highscore.cpp' object='pacman-highscore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-highscore.o `test -f 'highscore.cpp' || echo '$(srcdir)/'`highscore.cpp

pacman-highscore.obj: highscore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -MT pacman-highscore.obj -MD -MP -MF $(DEPDIR)/pacman-highscore.Tpo -c -o pacman-highscore.obj `if test -f 'highscore.cpp'; then $(CYGPATH_W) 'highscore.cpp'; else $(CYGPATH_W) '$(srcdir)/highscore.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pacman-highscore.Tpo $(DEPDIR)/pacman-highscore.Po
#	$(AM_V_CXX)source='highscore.cpp' object='pacman-highscore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pacman_CXXFLAGS) $(CXXFLAGS) -c -o pacman-highscore.obj `if test -f 'highscore.cpp'; then $(CYGPATH_W) 'highscore.cpp'; else $(CYGPATH_W) '$(srcdir)/highscore.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
